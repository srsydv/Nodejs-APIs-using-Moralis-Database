1.#nftprofiledetails

1.assetname =  Name of the assetname
2.typeofart      
3.dimension
4.bio
5.createrusername = username of who will mint the NFT.
6.creatername = name of who will mint the NFT.
7.createrwltaddress = Metamask A/C.
8.ownerusername = username of who will buy the NFT otherwise creater will be the owner.
9.ownername = name of who will buy the NFT otherwise creater will be the owner.
10.ownerwltaddress = Metamask A/C of owner who will buy the NFT for now creater address will be the here.
11.city = city of creater
12.tokenid
13.dateofcreation
14.marking
15.provenance
16.estimatedvalue
17.evidenceofownership
18.nftimage
19.nftimage1
20.nftimage2
21.nftimage3
22.blockchain = like ETH, BNB
23.validationstate = It will be 1."Not Started", 2."pending", 3."Validated"
{
    "Not Started" :=> when the user will mint the NFT then the validationstate state will be Not Started.
    "pending" :=> if owner will send the NFT for validation the the validationstate will be pending.
    "Validated" :=> If Any Validator validated any NFT then the validationstate will be validated.
}
24.validatorname = Here the name of validator who validates this NFT.
25.validatorusername =  Here the username of validator who validates this NFT.
26.validatorwltaddress = Here the Metamask Wlt address of validator who validates this NFT.
27.nftcreationdate     =  moment().format() when the NFT mints.
28.burnNFTstatus = true,False
29.swapStatus = It will be 1."Not Started", 2."pending", 3."swaped"
{
    "Not Started" :=> when the user will mint the NFT then the swapStatus state will be Not Started.
    "pending" :=> if owner will send the NFT for swap then the swapStatus will be "Pending, Swapping Request with tokenId x".
    "swaped" :=> If req reciever accept the request It will be "Swapped with tokenId x"
}
30.sellstatus = It will be 1."pending", 2."Sold"
{
    "Not Started" :=> when the user will mint the NFT then the sellstatus state will be Not Started.
    "Pending" :=> When he will list the NFT for Marketplace
    "Sold" :=> When NFT will be sold
}
31.ipfsmetadataurl = It will send NFT IPFS metadata
32.mptype = This is marketplace type it will be two types
{
    1.Fixed Price
    2.Timed Auction
} 
33.mpprice = Marketplace price
34.mpduration = marketplace duration
35.mpsupply = marketplace supply
36.mpsetasbundle = Marketplace set as bundle
37.mpreserveforspecificbuyer = Marketplace reserve for specific buyer
38.mpfees = Marketplace fees
39.redeemNFTstatus=True and False

2.#nftForValidation

1.assetname = NFT name which will be sending for validation
2.tokenid = tokenid of NFT which will be sending for validation
3.ownerusername = username of the owner of that NFT
4.ownername 
5.ownerwltaddress
6.createrusername =  = username of the creater of that NFT
7.creatername
8.createrwltaddress
9.address = wlt address who is sending the NFT for Validation, means owner wlt address.
10.validationstate = It will be 1."pending", 2."Validated"
{
    "Not Started" :=> when user will create NFT
    "pending" :=> It will be pending autometically after sending any NFT for validation.
    "Validated" :=> If Any Validator validated any NFT then the validationstate will be validated.
}
11.validatorname = Here the name of validator who validates this NFT.
12.validatorusername =  Here the username of validator who validates this NFT.
13.validatorwltaddress = Here the Metamask Wlt address of validator who validates this NFT.
14.city = city of owner.
15.homeaddress
16.estimatedvalue = NFT estimated value by owner.
17.validatornameforvld = Here will be the validator name the one owner is sending (1 NFT can be send to multiple validator).
18.validatorusernameforvld = Here will be the validator username the one owner is sending.
19.validatorwltaddressforvld = Here will be the validator wollet address the one owner is sending.
20.nftimage
21.nftimage1
22.nftimage2
23.nftimage3
24.sendforvalidationdate = moment().format() when the NFT is going to send for validation.


3.#favouritenft

1.assetname = name of NFT.
2.tokenid = tokenid of NFT.
3.validatorname = Validator name who will make that NFT favourit.
4.validatorusername = Validator username who will make that NFT favourit.
5.validatorwltaddress = Validator Metamask A/C address who will make that NFT favourit.
6.name = name of user who will make that NFT favourit.
7.username = username of user who will make that NFT favourit.
8.userwltaddress = user Metamask A/C address who will make that NFT favourit.

4.#userDetail #validatorDetail

name = name of the user/validator
username = 
address = 
bio
profilepic
profilebannerer
homeaddress
city
email
phone
twitter 
facebook
instagram
websiteurl


5.#activityForUser

assetname
tokenid
toswapassetname = name of the asset from which you want to change your asset
toswaptokenid = tokenid of the asset from which you want to change your asset
swaprequesttouserwltAddress = {
        1.This address will also get notification for "swap Request IN"after swap request
        2.This address will also get notification for "swap Request Accepted" after Accepting swap by that user 
    }
swaprequesttoname = name of that NFT owner
swaprequesttousername = username of that NFT owner
username = your username
name = your name || Locked Money Reciever (You) in burn NFT
userwltaddress = your wlt address
Message = Message can be anything which will be the user activity
{
    1.Swap Request
        1.1 Swap Request IN (with IN sign)
        1.2 Swap Request OUT (with OUT sign)
    2.Swap Request Accepted
    3.Charged NFT
    4.NFT burned
    {
        ~ Asset NFT Reciever (Validator)
        ~ Locked Money Reciever (You, Who is burning it)
    }
    5.NFT Transfered
    6.NFT Recieved
    7.Redeem NFT
    {
        ~ Locked Money Reciever (Validator)
        ~ Asset NFT Reciever (You, Who is burning it)
    }
}
validatorwltaddress
validatorname = Asset NFT Reciever (Validator) in burn NFT
validatorusername
nfttransferaddress = Where you are transfering thye NFT
nfttransferusername = 
nfttransfername
DateAndTime = moment().format() for every activity


6.#activityForValidator

assetname
tokenid
validatorwltaddress
validatorname
validatorusername
ownerusername = Because only owner can burn it so in owner clm user data will be storing
ownername
ownerwltaddress
createrusername
creatername
createrwltaddress
userWltAddress
Message = Message can be anything which will be the user activity
{
    1.Swap Request
        1.1 Swap Request IN (with IN sign)
        1.2 Swap Request OUT (with OUT sign)
    2.Swap Request Accepted
    3.Charged NFT
    4.NFT burned
    {
        ~ Asset NFT Reciever (Validator)
        ~ Locked Money Reciever (Owner)
        ~ And In nftprofiledetails collection we are putting validator in ownerwltaddress clm because after burning validator will be owner
        ~ Because only owner can burn it so in owner clm user data will be storing
        ~ In UI we can show "Burned by Address" insted of ownerwltaddress
    }
    5.NFT Transfered
    6.NFT Recieved
    7.Redeem NFT
    {
        ~ Locked Money Reciever (Validator)
        ~ Asset NFT Reciever (Owner)
        ~ Because only owner can burn it so in owner clm user data will be storing
        ~ In UI we can show "Redeem by" insted of "ownerwltaddress"
    }
}
DateAndTime